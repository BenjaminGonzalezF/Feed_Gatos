version: '3.1'
services:
  apache:
    image: marvambass/apache2-ssl-secure
    container_name: apache
    ports:
      - 80:443
      - 444:443
    volumes:
      - ../frontend:/var/www/html
      - ../frontend/key:/etc/apache2/external/
    networks:
      - mynetwork
    depends_on:
      - backend

  backend:
    build: .
    container_name: backend
    env_file: .env
    environment:
      - MONGO_USERNAME=$MONGO_USERNAME
      - MONGO_PASSWORD=$MONGO_PASSWORD
      - MONGO_HOSTNAME=$MONGO_HOSTNAME
      - MONGO_PORT=$MONGO_PORT
    ports:
      - 3000:3000
    depends_on:
      - mongo
    networks:
      - mynetwork

  mongo:
    container_name: dbmongo
    image: mongo
    environment:
      MONGO_INITDB_ROOT_USERNAME: $MONGO_USERNAME
      MONGO_INITDB_ROOT_PASSWORD: $MONGO_PASSWORD
    ports:
      - 27017:27017
    networks:
      - mynetwork

  mongo-express:
    container_name: mongo-express
    image: mongo-express
    ports:
      - 8081:8081
    depends_on:
      - mongo
    environment:
      ME_CONFIG_MONGODB_SERVER: mongo
      ME_CONFIG_MONGODB_ENABLE_ADMIN: false
      ME_CONFIG_MONGODB_AUTH_USERNAME: $MONGO_USERNAME
      ME_CONFIG_MONGODB_AUTH_PASSWORD: $MONGO_PASSWORD
      ME_CONFIG_BASICAUTH_USERNAME: $MONGO_USERNAME
      ME_CONFIG_BASICAUTH_PASSWORD: $MONGO_PASSWORD
      ME_CONFIG_REQUEST_SIZE: 100kb
      ME_CONFIG_SITE_SSL_ENABLED: 'true'
      ME_CONFIG_SITE_SSL_CRT_PATH: /etc/ssl/certs/cert.pem
      ME_CONFIG_SITE_SSL_KEY_PATH: /etc/ssl/certs/key.pem

    volumes:
      - ./keys/:/etc/ssl/certs/

    networks:
      - mynetwork
      
networks:
  mynetwork:

